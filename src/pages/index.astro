---
// Astro 
import { getCollection } from "astro:content";

// Astro Components
import Icon from "astro-icon";
import Page from "@/components/astro/page.astro";
import Section from "@/components/astro/section.astro";
import ProjectPreview from "@/components/astro/project-preview.astro";
import WorkExperience from "@/components/astro/work-experience.astro";

// Preact Components
import { buttonClassName } from "@konj-org/preact-ui";

// TW merge
import { twMerge } from "tailwind-merge";

// Data
import data from "@/data";
const { title, description, socials, profileFilename } = data;

// Fetching About file
const { Content: About } = (await Astro.glob("../sections/about.md"))[0]!; 

// Fetching projects and sorting them by the newest start date.
const projects = (await getCollection("projects")).sort((a,b) => {
	const aSD = a.data.startDate ? a.data.startDate : 0;
	const bSD = b.data.startDate ? b.data.startDate : 0;

	if ( aSD > bSD ) return -1;
	if ( aSD < bSD ) return 1;
	return 0;
});

// Fetching experiences and sorting them by the newest start date.
const experiences = (await getCollection("experiences")).sort((a,b) => {
	const aSD = a.data.startDate ? a.data.startDate : 0;
	const bSD = b.data.startDate ? b.data.startDate : 0;

	if ( aSD > bSD ) return -1;
	if ( aSD < bSD ) return 1;
	return 0;
});
---

<Page>
	<!-- Hero Banner Section -->
	<section class="flex flex-col md:flex-row items-center gap-2 md:gap-6 mb-6">
		<div class="rounded-full border border-neutral-200 dark:border-neutral-800 bg-neutral-200/20 dark:bg-neutral-800/20  aspect-square w-[40vw] md:w-[min(10vw,180px)] [&>img]:my-0">
			{
				profileFilename ? <img alt="profile picture" src={profileFilename} class="aspect-square w-full h-full" /> :
				<>
					<img alt="profile picture" src="/ICON-DARK.svg" class="aspect-square w-full h-full hidden dark:block" />
					<img alt="profile picture" src="/ICON-LIGHT.svg" class="aspect-square w-full h-full dark:hidden" />
				</>
			}
		</div>
		<div class="flex justify-center items-center flex-col md:block">
			<h1 class="text-4xl md:text-6xl my-1 font-semibold">
				{ title }
			</h1>
			<p class="text-sm my-0 font-light md:text-base">
				{ description }
			</p>
			<div class="flex gap-2 mt-2">
				{
					socials.map(({ href, icon, name }) => (
						<a 
							class={
								twMerge(
									buttonClassName({ 
										square: true,
										variant: "outline",
										compiledVariant: "theme-subtle",
										color: "theme",
									}),
									"rounded-full !p-2" 
								)
							}
							target="_blank" 
							href={href}
						>
							<span class="text-[0px] opacity-0 select-none p-0 m-0 absolute">{"link to " + name}</span>
							<Icon name={icon} class="w-4 h-4" />
						</a>
					))
				}
			</div>
		</div>
	</section>
	<!-- About Section -->
	<Section 
		id="about" 
		title="About" 
		textSection
	>
		<About />
	</Section>
	<!-- Projects Preview Section -->
	<Section 
		id="projects" 
		title="Projects"
		className="full-bleed md:max-w-4xl md:w-full md:mx-auto py-6 [&_h2]:mx-8 md:[&_h2]:mx-0"
	>
		<ul class="px-0 py-0">
			{
				projects.map((project) => <ProjectPreview project={project} />)
			}
		</ul>
	</Section>
	<Section
		id="experiences" 
		title="Experiences"
		className="full-bleed md:max-w-4xl md:w-full md:mx-auto py-6 [&_h2]:mx-8 md:[&_h2]:mx-0"
	>
		{
			experiences.map((experience) => <WorkExperience experience={experience} />)
		}
	</Section>
</Page>