---
// Astro 
import type { GetStaticPaths, Page as AstroPage } from "astro";

// Utils
import getBlogs from "@/utils/getBlogs";

// Astro Components
import Page from "@/components/astro/page.astro";

// Konj UI
import { Button, DAnchor } from "@konj-org/preact-ui";

// Icons
import Icon from "astro-icon";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const pages = await getBlogs();

  return paginate(pages, { pageSize: 10 });
}

const { page } = Astro.props as { page: AstroPage };
---

<Page>
	<h1 
		class="text-4xl md:text-6xl mt-1 mb-6 md:mb-12 font-semibold"
	>
		Blogs
	</h1>
	<div class="md:max-w-4xl full-bleed md:w-full md:mx-auto grid md:grid-cols-2 gap-8 md:gap-4 items-center content-center">
		{
			page.data.map((blog) => {
				if ( !blog ) return null;
				const { data: { banner, bannerRatio, title, description }, slug } = blog;
				return (
					<div 
						class={[
							"block",
							"overflow-hidden",
							"col-span-1",
							"row-span-1",
							"md:p-6",
							"md:rounded-[calc(theme(borderRadius.xl)_+_theme(spacing.6))]",
							"md:bg-neutral-100",
							"md:dark:bg-neutral-900",
							"md:border",
							"md:border-transparent",
							"md:hover:border-primary-300",
							"md:dark:hover:border-primary-600",
							"md:transition-[colors,box-shadow,border]",
							"md:shadow-xl",
							"md:shadow-neutral-950/10",
							"md:hover:shadow-2xl",
							"md:duration-300"
						].join(" ")}
					>
						<img 
							src={"/assets/" + banner} 
							alt={title + " Banner"}
							style={`aspect-ratio: ${bannerRatio}`} 
							loading="lazy" 
							decoding="async" 
							class={[
								"object-cover",
								"w-full",
								"md:my-0",
								"md:rounded-xl",
								"overflow-hidden",
								"my-0"
							].join(" ")} 
						/>
						<div class="px-8 md:px-0">
							<h3 class="mb-1 mt-4 no-underline font-semibold">{title}</h3>
							<p class="text-sm font-light mt-1">{description}</p>
							<div class="flex justify-end">
								<Button variant="outline" component={DAnchor} href={"/blogs/" + slug}>
									Read more
								</Button>
							</div>
						</div>
					</div>
				)
			})
		}
	</div>
	<div
		class={[
			"mt-8",
			"flex",
			"flex-col",
			"gap-2",
			"md:flex-row",
			"md:gap-0",
			"justify-between"
		].join(" ")}
	>
		<p class="my-0 font-mono text-xs opacity-75 text-center">
			{`On Page ${page.currentPage} of ${page.lastPage} Pages`}
		</p>
		{
			(page.url.next || page.url.prev) && 
			<div 
				class={[
					"bg-neutral-50",
					"dark:bg-neutral-950",
					"rounded-3xl",
					"overflow-hidden",
					"border",
					"transition-colors",
					"duration-200",
					"flex",
					"justify-between",
					"text-sm",
					"select-none",
					"border-neutral-200",
					"dark:border-neutral-800",
					"md:hover:border-primary-300",
					"md:dark:hover:border-primary-600",
					"[&>a]:no-underline",
					"[&>a]:px-6",
					"[&>a]:py-2",
					"[&>a]:flex",
					"[&>a]:gap-1",
					"[&>a]:justify-center",
					"[&>a]:items-center",
					"[&>a]:transition-colors",
					"[&>a]:duration-200",
					"[&>a[data-disabled=true]>*]:opacity-25",
					"[&>a[data-disabled=true]:hover]:cursor-not-allowed",
					"[&>a:hover:not([data-disabled=true])]:cursor-pointer",
					"[&>a:hover:not([data-disabled=true])]:bg-primary-300/10",
					"[&>a:hover:not([data-disabled=true])]:text-primary-800",
					"dark:[&>a:hover:not([data-disabled=true])]:text-primary-200",
				].join(" ")}
			>
				<a
					data-disabled={`${page.url.prev === undefined}`}
					href={page.url.prev}
				>
					<Icon name="ic:round-chevron-left" className="w-6 h-6" />
					<span>Previous</span>
				</a>
				<a
					data-disabled={`${page.url.next === undefined}`}
					href={page.url.next}
				>
					<span>Next</span>
					<Icon name="ic:round-chevron-right" className="w-6 h-6" />
				</a>
			</div>
		}
	</div>
</Page>