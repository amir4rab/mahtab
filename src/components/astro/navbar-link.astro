---
import pathnameSignal from '@/hooks/usePathname';
import Icon from 'astro-icon';
interface Props {
  title: string,
  href?: string,
  className?: string;
  expandable?: boolean;
};

const { href = "", title, className = "", expandable= true } = Astro.props;
---

<a
  id={`navbar-link-to-${href}`}
  data-expandable={`${expandable}`}
  data-active={`${pathnameSignal.value === href}`}
  href={href}
  class={[
    "data-[active=true]:dark:text-primary-200",
    "[&_span]:font-light",
    "opacity-75",
    "text-xs",
    "md:text-sm",
    "transition-[color,opacity]",
    "cursor-pointer",
    "duration-200",
    "flex",
    "items-center",
    "justify-center",
    "flex-col",
    "gap-1",
    "md:flex-row",
    "hover:opacity-100",
    "hover:dark:text-primary-200",
    "md:relative",
    "py-2",
    "px-4",
    "md:data-[expandable=true]:px-[1.75rem]",
    "md:data-[expandable=true]:data-[active=false]:hover:[--offset:-.75rem]",
    "md:[--arrow-opacity:0%]",
    "md:[--arrow-offset:0%]",
    "md:data-[expandable=true]:data-[active=false]:hover:[--arrow-opacity:100%]",
    "md:data-[expandable=true]:data-[active=false]:hover:[--arrow-offset:100%]",
    "[&>*]:transition-[transform,opacity]",
    "[&>*]:ease-elastic-1",
    "[&>*]:duration-200",
    "rounded-3xl",
    "bg-transparent",
    "md:hover:data-[active=false]:bg-primary-400/10",
    "md:dark:hover:data-[active=false]:bg-primary-300/10",
    className
  ].join(" ")}
>
  <div class="md:translate-x-[var(--offset)]">
    <slot />
  </div>
  <span class="md:translate-x-[var(--offset)]">
    { title }
  </span>
  {
    expandable && 
    <Icon 
      name="ic:round-arrow-forward" 
      className="w-5 h-5 hidden md:block opacity-[var(--arrow-opacity)] pointer-events-none absolute right-4 -rotate-45 translate-x-[calc(100%_-_var(--arrow-offset))]" 
    />
  }
</a>