---
import Icon from "astro-icon";

// Utils
import pathnameSignal from "@/hooks/usePathname";
import getBlogs from "@/utils/getBlogs";
import getProjects from "@/utils/getProjects";

// Astro Components
import NavbarLink from "@/components/astro/navbar-link.astro";

// Preact Components
import SearchBox from "@/components/preact/search-box";

const [blogs, projects] = await Promise.all([getBlogs(), getProjects()]);

const { pathname } = Astro.url;
pathnameSignal.value = pathname.endsWith("/") ? pathname : pathname + "/";
---

<nav
  transition:persist="navbar" 
  class={[
    "bg-neutral-50",
    "dark:bg-neutral-950",
    "md:bg-neutral-50/50",
    "md:dark:bg-neutral-950/50",
    "md:backdrop-blur-xl",
    "border-t",
    "md:border-t-0",
    "md:border-b",
    "border-neutral-100",
    "dark:border-neutral-900",
    "md:top-0",
    "fixed",
    "bottom-0",
    "left-0",
    "md:bottom-auto",
    "text-inherit",
    "w-full",
    "z-[1000]",
    "md:sticky",
    "md:py-3",
    "px-8",
    "md:px-2",
    "pb-[env(safe-area-inset-bottom)]"
  ].join(" ")}
>
  <div
    id="navigation-wrapper"
    class={[
      "max-w-4xl",
      "mx-auto",
      "grid",
      "grid-cols-4",
      "md:flex",
      "md:justify-center",
      "items-center",
      "md:gap-2",
    ].join(" ")}
  >
    <NavbarLink title="Home" href="/">
      <Icon class="w-6 h-6 md:h-5 md:y-5" name="ic:round-home" />
    </NavbarLink>
    <NavbarLink title="Projects" href="/projects/">
      <Icon class="w-6 h-6 md:h-5 md:y-5" name="ic:round-workspace-premium" />
    </NavbarLink>
    <NavbarLink title="Blog" href="/blogs/1/">
      <Icon class="w-6 h-6 md:h-5 md:y-5" name="ic:round-newspaper" />
    </NavbarLink>
    <NavbarLink expandable={false} id="navigation-search" title="Search">
      <Icon class="w-6 h-6 md:h-5 md:y-5" name="ic:round-search" />
    </NavbarLink>
  </div>
  <SearchBox blogs={blogs} projects={projects} client:idle>
    <Icon className="w-4 h-4" name="ic:round-search" />
  </SearchBox>
</nav>

<script>
  import pathnameSignal from '@/hooks/usePathname';

  const updatePathname = () => {
    // Extracting pathname
    const { pathname } = window.location;

    // Updating the signal
    pathnameSignal.value = pathname.endsWith("/") ? pathname : pathname + "/";

    // Getting elements
    const element = document.getElementById(`navbar-link-to-${pathname}`);
    const navigationWrapper = document.getElementById("navigation-wrapper");

    // Deactivating All of navigation items
    navigationWrapper && navigationWrapper.childNodes.forEach((el) => (el as HTMLElement)?.setAttribute("data-active", "false"));

    // Activating the current navigation element, if it exits
    element && element.setAttribute("data-active", "true");

  }

  updatePathname();
  document.addEventListener('astro:after-swap', updatePathname);
</script>